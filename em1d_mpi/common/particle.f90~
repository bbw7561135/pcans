module particle

  implicit none

  private

  public :: particle__solv


contains


  subroutine particle__solv(gp,up,uf,                         &
                            np,nsp,np2,nxs,nxe,nxs1,nxe1,bcp, &
                            delt,c,q,r)

    integer, intent(in)  :: np, nxs, nxe, nxs1, nxe1, nsp, bcp
    integer, intent(in)  :: np2(nxs:nxe+bcp,nsp)
    real(8), intent(in)  :: up(4,np,nxs:nxe+bcp,nsp)
    real(8), intent(in)  :: uf(6,nxs1:nxe1)
    real(8), intent(in)  :: delt, c, q(nsp), r(nsp)
    real(8), intent(out) :: gp(4,np,nxs:nxe+bcp,nsp)
    integer :: i, ii, isp, ih
    real(8) :: dx, dxm, dx2, dxm2
    real(8) :: fac1, fac2, fac2r, fac3, fac3r, gam, txxx, bt2
    real(8) :: pf(6,np,nxs:nxe+bcp)
    real(8) :: uvm(6,np,nxs:nxe+bcp)

    do isp=1,nsp
       !interpolate fields to particles

       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             ih = floor(up(1,ii,i,isp)+0.5)

             dx = up(1,ii,i,isp)-i
             dxm = 1.-dx
             dx2 = up(1,ii,i,isp)+0.5-ih
             dxm2 = 1.-dx2

             pf(1,ii,i) = uf(1,i)
             pf(2,ii,i) = +dxm*uf(2,i)+dx*uf(2,i+1)
             pf(3,ii,i) = +dxm*uf(3,i)+dx*uf(3,i+1)
             pf(4,ii,i) = +dxm*uf(4,i)+dx*uf(4,i+1)
             pf(5,ii,i) = +dxm2*uf(5,ih-1)+dx2*uf(5,ih)
             pf(6,ii,i) = +dxm2*uf(6,ih-1)+dx2*uf(6,ih)
          enddo
       enddo
            
       fac1 = q(isp)/r(isp)*0.5*delt
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             uvm(1,ii,i) = up(2,ii,i,isp)+fac1*pf(4,ii,i)
          enddo
       enddo
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             uvm(2,ii,i) = up(3,ii,i,isp)+fac1*pf(5,ii,i)
          enddo
       enddo
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             uvm(3,ii,i) = up(4,ii,i,isp)+fac1*pf(6,ii,i)
          enddo
       enddo

       fac2 = fac1/c
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             gam = dsqrt(1.0+(+uvm(1,ii,i)*uvm(1,ii,i) &
                              +uvm(2,ii,i)*uvm(2,ii,i) &
                              +uvm(3,ii,i)*uvm(3,ii,i))/(c*c))
             fac2r = fac2/gam
             uvm(4,ii,i) = uvm(1,ii,i) &
                  +fac2r*(+uvm(2,ii,i)*pf(3,ii,i)-uvm(3,ii,i)*pf(2,ii,i))
             uvm(5,ii,i) = uvm(2,ii,i) &
                  +fac2r*(+uvm(3,ii,i)*pf(1,ii,i)-uvm(1,ii,i)*pf(3,ii,i))
             uvm(6,ii,i) = uvm(3,ii,i) &
                  +fac2r*(+uvm(1,ii,i)*pf(2,ii,i)-uvm(2,ii,i)*pf(1,ii,i))
          enddo
       enddo
    
       txxx = fac1*fac1
       fac3 = q(isp)*delt/r(isp)
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             bt2 = pf(1,ii,i)*pf(1,ii,i)+pf(2,ii,i)*pf(2,ii,i)+pf(3,ii,i)*pf(3,ii,i)
             gam = dsqrt(1.0+(+uvm(1,ii,i)*uvm(1,ii,i) &
                              +uvm(2,ii,i)*uvm(2,ii,i) &
                              +uvm(3,ii,i)*uvm(3,ii,i))/(c*c))
             fac3r = fac3/(gam+txxx*bt2/gam)
             uvm(1,ii,i) = uvm(1,ii,i) &
                  +fac3r*(+uvm(5,ii,i)*pf(3,ii,i)-uvm(6,ii,i)*pf(2,ii,i))
             uvm(2,ii,i) = uvm(2,ii,i) &
                  +fac3r*(+uvm(6,ii,i)*pf(1,ii,i)-uvm(4,ii,i)*pf(3,ii,i))
             uvm(3,ii,i) = uvm(3,ii,i) &
                  +fac3r*(+uvm(4,ii,i)*pf(2,ii,i)-uvm(5,ii,i)*pf(1,ii,i))
          enddo
       enddo

       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             gp(2,ii,i,isp) = uvm(1,ii,i)+fac1*pf(4,ii,i)
          enddo
       enddo
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             gp(3,ii,i,isp) = uvm(2,ii,i)+fac1*pf(5,ii,i)
          enddo
       enddo
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             gp(4,ii,i,isp) = uvm(3,ii,i)+fac1*pf(6,ii,i)
          enddo
       enddo
      
       do i=nxs,nxe+bcp
          do ii=1,np2(i,isp)
             gam = dsqrt(1.0+(+gp(2,ii,i,isp)*gp(2,ii,i,isp) &
                              +gp(3,ii,i,isp)*gp(3,ii,i,isp) &
                              +gp(4,ii,i,isp)*gp(4,ii,i,isp))/(c*c))
             gp(1,ii,i,isp) = up(1,ii,i,isp)+gp(2,ii,i,isp)*delt/gam
          enddo
       enddo

    enddo

  end subroutine particle__solv


end module particle
